{
	"info": {
		"_postman_id": "b0b0b0b0-b0b0-b0b0-b0b0-b0b0b0b0b0b0",
		"name": "Books Lending Service",
		"description": ".NET 8 Web API for managing a library's book lending system. Works locally and on AWS Lambda.\n\n**Local Development:**\n- Set baseUrl to: `http://localhost:5000`\n\n**AWS Production:**\n- Set baseUrl to your API Gateway URL (e.g., `https://abc123.execute-api.us-east-1.amazonaws.com/prod`)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List Books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books"]
				},
				"description": "Get a list of all books in the library.\n\n**Response (200 OK):**\n```json\n[\n  {\n    \"id\": \"abc-123\",\n    \"title\": \"Clean Code\",\n    \"author\": \"Robert C. Martin\",\n    \"isbn\": \"978-0132350884\",\n    \"isCheckedOut\": false\n  }\n]\n```"
			},
			"response": []
		},
		{
			"name": "Add Book",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Clean Code\",\n  \"author\": \"Robert C. Martin\",\n  \"isbn\": \"978-0132350884\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books"]
				},
				"description": "Add a new book to the library.\n\n**Request Body:**\n- `title` (required, 1-500 chars)\n- `author` (required, 1-200 chars)\n- `isbn` (required)\n\n**Response (201 Created):**\n```json\n{\n  \"id\": \"abc-123\",\n  \"title\": \"Clean Code\",\n  \"author\": \"Robert C. Martin\",\n  \"isbn\": \"978-0132350884\",\n  \"isCheckedOut\": false\n}\n```\n\n**Save the `id` from the response to use in checkout/return requests!**"
			},
			"response": []
		},
		{
			"name": "Add Book - The Pragmatic Programmer",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"The Pragmatic Programmer\",\n  \"author\": \"David Thomas, Andrew Hunt\",\n  \"isbn\": \"978-0135957059\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books"]
				},
				"description": "Add another book example"
			},
			"response": []
		},
		{
			"name": "Add Book - Validation Error",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"\",\n  \"author\": \"\",\n  \"isbn\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books"]
				},
				"description": "Example of validation errors when required fields are missing or empty.\n\n**Response (400 Bad Request):**\n```json\n{\n  \"errors\": [\n    \"Title is required\",\n    \"Author is required\",\n    \"ISBN is required\"\n  ]\n}\n```"
			},
			"response": []
		},
		{
			"name": "Checkout Book",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/{{bookId}}/checkout",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books", "{{bookId}}", "checkout"]
				},
				"description": "Check out a book from the library.\n\n**Replace `{{bookId}}` with the actual book ID from the Add Book response.**\n\n**Response (200 OK):**\n```json\n{\n  \"message\": \"Book checked out successfully\"\n}\n```\n\n**Response (400 Bad Request):**\n```json\n{\n  \"error\": \"Book is already checked out or does not exist\"\n}\n```"
			},
			"response": []
		},
		{
			"name": "Return Book",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/{{bookId}}/return",
					"host": ["{{baseUrl}}"],
					"path": ["api", "books", "{{bookId}}", "return"]
				},
				"description": "Return a book to the library.\n\n**Replace `{{bookId}}` with the actual book ID.**\n\n**Response (200 OK):**\n```json\n{\n  \"message\": \"Book returned successfully\"\n}\n```\n\n**Response (400 Bad Request):**\n```json\n{\n  \"error\": \"Book is not checked out or does not exist\"\n}\n```"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string",
			"description": "API Base URL. Use http://localhost:5000 for local, or your AWS API Gateway URL for production."
		},
		{
			"key": "bookId",
			"value": "your-book-id-here",
			"type": "string",
			"description": "The ID of a book (get this from the Add Book response). Update this value after adding a book."
		}
	]
}
